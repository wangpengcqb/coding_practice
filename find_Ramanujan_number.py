'''
[1729, 4104, 13832, 20683, 32832, 39312, 40033, 46683, 64232, 65728, 110656, 110808, 134379, 149389, 165464, 171288, 195841, 216027, 216125, 262656, 314496, 320264, 
327763, 373464, 402597, 439101, 443889, 513000, 513856, 515375, 525824, 558441, 593047, 684019, 704977, 805688, 842751, 885248, 886464, 920673, 955016, 984067, 99468
8, 1009736, 1016496, 1061424, 1073375, 1075032, 1080891, 1092728, 1195112, 1260441, 1323712, 1331064, 1370304, 1407672, 1533357, 1566728, 1609272, 1728216, 1729000, 
1734264, 1774656, 1845649, 2048391, 2101248, 2301299, 2418271, 2515968, 2562112, 2585375, 2622104, 2691451, 2864288, 2987712, 2991816, 3220776, 3242197, 3375001, 337
5008, 3511872, 3512808, 3551112, 3587409, 3628233, 3798613, 3813992, 4033503, 4104000, 4110848, 4123000, 4174281, 4206592, 4342914, 4467528, 4505949, 4511808, 460706
4, 4624776, 4673088]
'''
from collections import Counter
def FindRamanujanNumber(M):
    if M <= 0:
        return []
    
    lo = 1
    hi = 2
    res = set()
    mymap = Counter() 
    remain = M
    while remain > 0:
        for i in range(1, hi):
            for j in range(max(i,lo+1), hi+1):
                val = i**3 + j**3
                mymap[val] += 1
                if mymap[val] == 2:
                    res.add(val)

        remain -= len(res)
        
        lo = lo*2
        hi = hi*2

    res = list(sorted(res))
    return res[:M]
    
    
def FindRamanujanNumberBF(M):
    if M <= 0:
        return []

    res = []
    mymap = Counter() 
    upper = 1000

    for i in range(1, upper):
        for j in range(i, upper):
            val = i**3 + j**3
            mymap[val] += 1
            if mymap[val] == 2:
                res.append(val)

    res = list(sorted(res))
    return res[:M]    

print(FindRamanujanNumber(100))